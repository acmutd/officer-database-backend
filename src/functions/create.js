const { db } = require('../firebase.js')
const { convertOfficerDates, validateOfficerData } = require('./helpers/validators.js')
const { formatOfficerDates } = require('../schemas/format')

const COLLECTION = 'officer'

async function createOfficer(data) {
  // validate input shape before writing to Firestore (returns parsed data)
  const parsed = validateOfficerData(data)

  // convert joinDate and role dates to Firestore Timestamps using parsed data
  const dataConverted = convertOfficerDates(parsed)

  // Create a new document reference with an autogenerated ID but don't write yet
  const officerRef = db.collection(COLLECTION)

  const docRef = officerRef.doc()
  const UID = docRef.id
  // Include the generated UID in the document body before saving
  const dataWithUID = { UID, ...dataConverted }

  await docRef.set(dataWithUID)
  const snap = await docRef.get()
  return formatOfficerDates({ id: snap.id, ...snap.data() })
}

module.exports = {
  createOfficer
}